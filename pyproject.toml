[tool.poetry]
name = "3lc_tools"
version = "0.1.0"
description = "A set of open-source tools for extending and enhancing the base 3lc functionality."
authors = ["3LC <hello@3lc.ai>"]
readme = "README.md"
license = "Apache-2.0"
keywords = ["AI", "tools", "data workflows", "3lc"]
packages = [{ include = "tlc_tools", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
3lc = { version = "^2.10.0", extras = [] }
fpsample = "^0.3.3"
segment-anything = { git = "https://github.com/facebookresearch/segment-anything", optional = true }
opencv-python = "^4.10.0.84"

[tool.poetry.extras]
umap = ["3lc"]
pacmap = ["3lc"]
huggingface = ["3lc"]
sam = ["segment-anything"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"
pytest = "^8.3.3"
mypy = "^1.12.0"
papermill = "^2.6.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
include = [
    "pyproject.toml",
    "tools/**/*.py",
    "tests/**/*.py",
]
line-length = 120
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = [
    "B",
    "E",
    "F",
    "UP",
    "SIM",
    "I",
]

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yaml"
ignore_missing_imports = true